name: CI/CD to VPS

on:
  push:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        shell: bash
        run: |
          cd backend
          docker build -t ghcr.io/${{ github.repository }}/backend:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
          docker tag ghcr.io/${{ github.repository }}/backend:${{ github.sha }} ghcr.io/${{ github.repository }}/backend:latest
          docker push ghcr.io/${{ github.repository }}/backend:latest

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend image
        shell: bash
        run: |
          cd frontend
          cp .env.example .env
          chmod +x env.sh 
          sh env.sh 
          cp env-config.js ./public/env-config.js
          docker build -t ghcr.io/${{ github.repository }}/frontend:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          docker tag ghcr.io/${{ github.repository }}/frontend:${{ github.sha }} ghcr.io/${{ github.repository }}/frontend:latest
          docker push ghcr.io/${{ github.repository }}/frontend:latest

  deploy-backend:
    needs: [build-backend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker container rm -f backend || true
            sudo docker rmi ghcr.io/${{ github.repository }}/backend:latest
            sudo docker pull ghcr.io/${{ github.repository }}/backend:latest
            sudo docker run --name backend -p 1337:1337 --network=nginx_network \
              -e APP_KEYS=${{ secrets.APP_KEYS }} \
              -e API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }} \
              -e ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }} \
              -e TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e DATABASE_CLIENT=postgres \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e DATABASE_SSL=true \
              -d ghcr.io/${{ github.repository }}/backend:latest
